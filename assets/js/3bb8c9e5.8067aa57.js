"use strict";(self.webpackChunkstm_32_documentaion=self.webpackChunkstm_32_documentaion||[]).push([[932],{3599:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var i=t(4848),r=t(8453);const o={},s="RoomAutomation",l={id:"CustomProjects/RoomAutomation",title:"RoomAutomation",description:"- This project is the combination of several modules",source:"@site/docs/CustomProjects/RoomAutomation.md",sourceDirName:"CustomProjects",slug:"/CustomProjects/RoomAutomation",permalink:"/stm32docs/docs/CustomProjects/RoomAutomation",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/CustomProjects/RoomAutomation.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Code",permalink:"/stm32docs/docs/UltrasonicSensor/code"}},c={},d=[{value:"Steps to Implement this Project",id:"steps-to-implement-this-project",level:3},{value:"Pinout &amp; Clock Config",id:"pinout--clock-config",level:3},{value:"Code",id:"code",level:3}];function a(e){const n={code:"code",h1:"h1",h3:"h3",header:"header",hr:"hr",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"roomautomation",children:"RoomAutomation"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"This project is the combination of several modules"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"LCD Room Temperature Display:"})," Temperature Sensor(LM35)  --\x3e  LCD_Display"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Automatic Door Control:"})," IR Sensor(detect Obstacle)  --\x3e  Servo(180 degrees/0 degrees) [Open/Close Door]"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Automated Night Lamp:"})," LDR Module(Detect absence of Light)  --\x3e  Relay controlled Night Lamp"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["In addition to the modules learned, I have additionally included ",(0,i.jsx)(n.code,{children:"HAL_GetTick()"})," function to implement ",(0,i.jsx)(n.code,{children:"Non-Blocking Delay"})," instead of ",(0,i.jsx)(n.code,{children:"HAL_Delay()"})," function which is Blocking"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"steps-to-implement-this-project",children:"Steps to Implement this Project"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Initialize the Clock as per the steps in Servo module in the Docs"}),"\n",(0,i.jsx)(n.li,{children:"Initialize LCD Display pins and logic by following the procedures in the LCD Display module in the Docs"}),"\n",(0,i.jsx)(n.li,{children:"Configure PWM and timer, for Servo control reffering the Servo module in Docs"}),"\n",(0,i.jsx)(n.li,{children:"Initialize ADC by following the AnalogSensors: LM35 module procedures in the Docs"}),"\n",(0,i.jsx)(n.li,{children:"Initialize the pins and logic of IR Sensor and LDR Module by reffering the procedures of DigitalSenors: IR_LED module in the Docs"}),"\n",(0,i.jsx)(n.li,{children:"Use Non-Blocking delay instead of Blocking delay as stated above in the logic requirement after generating the code"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"pinout--clock-config",children:"Pinout & Clock Config"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Clock Config"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Image",src:t(5627).A+"",width:"1395",height:"487"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Pinout"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Image",src:t(4303).A+"",width:"443",height:"387"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"PA0"})," as ",(0,i.jsx)(n.code,{children:"ADC1_IN0"})," (LM35)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"PA1"})," as ",(0,i.jsx)(n.code,{children:"TIM2_CH2"})," (Servo)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"PA6"})," as ",(0,i.jsx)(n.code,{children:"GPIO Input"})," (IR_Sensor)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"PB10"})," as ",(0,i.jsx)(n.code,{children:"GPIO Output"})," (RelayBulb)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"PA8"})," as ",(0,i.jsx)(n.code,{children:"GPIO Input"})," (LDR)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"PB8"})," as ",(0,i.jsx)(n.code,{children:"I2C1_SCL"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"PB9"})," as ",(0,i.jsx)(n.code,{children:"I2C1_SDA"})]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"code",children:"Code"}),"\n",(0,i.jsxs)(n.p,{children:["Paste the following code snippet inside the ",(0,i.jsx)(n.code,{children:"/* USER CODE BEGIN Includes */"})," in ",(0,i.jsx)(n.code,{children:"main."}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c",children:'#include "stdio.h"\r\n#include "liquidcrystal_i2c.h"\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Paste the following code snippet inside the ",(0,i.jsx)(n.code,{children:"/* USER CODE BEGIN PV */"})," in ",(0,i.jsx)(n.code,{children:"main.h"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c",children:"uint32_t previousTime = 0;  // for non-blocking delay in main loop\r\nuint32_t ledPreviousTime = 0; // for LED control delay\r\nuint32_t servoPreviousTime = 0; // for Servo control delay\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Paste the following code snippet inside the ",(0,i.jsx)(n.code,{children:"/* USER CODE BEGIN PFP */"})," in ",(0,i.jsx)(n.code,{children:"main.h"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c",children:"int angle(int val);\r\nvoid door();\r\nvoid light();\r\nvoid temp();\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Paste the following code snippet inside the ",(0,i.jsx)(n.code,{children:"/* USER CODE BEGIN 2 */"})," in ",(0,i.jsx)(n.code,{children:"main.h"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c",children:"  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_2);\r\n\r\n  LCD_Init(2);\r\n  LCD_NoCursor();\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Paste the following code snippet inside the ",(0,i.jsx)(n.code,{children:"/* USER CODE BEGIN 3 */"})," in ",(0,i.jsx)(n.code,{children:"while(1)"})," under ",(0,i.jsx)(n.code,{children:"main.h"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c",children:"   temp();\r\n   light();\r\n   door();\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Paste the following code snippet inside the ",(0,i.jsx)(n.code,{children:"/* USER CODE BEGIN 4 */"})," in ",(0,i.jsx)(n.code,{children:"main.h"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c",children:'int angle(int val){\r\n\tint per_deg = 5.55;  //pulse value for 1\xb0 Rotation\r\n\tint pulse = 250 + (val * per_deg);  // calculate pulse value, starting from 25\r\n\treturn pulse;\r\n}\r\n\r\nvoid temp(){\r\n\t  // adc_value variable store the adc value,\r\n\t  // value variable store the temperature value\r\n\t  int adc_value, value;\r\n\t  // store the converted voltage value from analog value\r\n\t  float voltage;\r\n\r\n\t  int calibration_offset = 20;  // Calibrate the difference between measured temperature and actual temperature\r\n\r\n\t  int calibration_factor = 100; //10 mV per \xb0C, the factor will be 100 (1V = 1000 mV)\r\n    // start ADC convertion\r\n\t  HAL_ADC_Start(&hadc1);\r\n\t  HAL_ADC_PollForConversion(&hadc1, 100);\r\n\t  adc_value = HAL_ADC_GetValue(&hadc1);\r\n\t  HAL_ADC_Stop(&hadc1);\r\n\r\n\t  if (HAL_GetTick() - previousTime >= 3000) {\r\n\t\t  previousTime = HAL_GetTick();\r\n\t\t  voltage = (adc_value * 3.3) / 4096;\r\n\t\t  value = (voltage * calibration_factor) - calibration_offset;\r\n\r\n\t\t  char message[20];\r\n\t\t  sprintf(message, "Temp: %d C \\n\\r", value);\r\n\r\n\t\t  LCD_Clear();\r\n\t\t  LCD_SetCursor(0, 0);\r\n\t\t  LCD_Print(message);\r\n\t  }\r\n}\r\n\r\nvoid light(){\r\n\t  // Replace HAL_Delay(5000) with non-blocking delay\r\n\t  if ((HAL_GetTick() - ledPreviousTime >= 5000)||(!HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_8))) {\r\n\t\tif (HAL_GetTick() - ledPreviousTime >= 5000) {\r\n\t\tledPreviousTime = HAL_GetTick();\r\n\t\t// Check user button on GPIOA, GPIO_PIN_8\r\n\t\tHAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);\r\n\t\tHAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, GPIO_PIN_SET);}}\r\n\t  else {\r\n\t\tHAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_SET);\r\n\t\tHAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, GPIO_PIN_RESET);\r\n\t  }\r\n}\r\n\r\nvoid door(){\r\n\t  // Servo angle control with non-blocking delay\r\n\t  // Check if object is detected by the IR sensor (connected to GPIOA, GPIO_PIN_6)\r\n\t  if ((HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6))||(HAL_GetTick() - servoPreviousTime >= 5000)){\r\n\t      // If it\'s time to rotate the servo or the servo is already at 180 degrees\r\n\t      if (HAL_GetTick() - servoPreviousTime >= 5000) {\r\n\t          servoPreviousTime = HAL_GetTick();  // Reset the timer\r\n\t          __HAL_TIM_SET_COMPARE(&htim2, TIM_CHANNEL_2, angle(180));  // Set servo to 180 degrees\r\n\t      }\r\n\t  } else {\r\n\t      // No object detected, set the servo to 0 degrees immediately\r\n\t      __HAL_TIM_SET_COMPARE(&htim2, TIM_CHANNEL_2, angle(0));\r\n\t  }\r\n}\n'})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},4303:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/1-5fc995fb6336f40149bfd997e8ff9bc9.png"},5627:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/3-a9d6def4d40a187fd228899ab8b3dc4e.png"},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>l});var i=t(6540);const r={},o=i.createContext(r);function s(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);